services:
  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: svn_to_gitlab_${RAILS_ENV:-development}
    volumes:
      - ./docker_volumes/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    volumes:
      - ./docker_volumes/redis:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"
    volumes:
      # 개발 환경: 전체 소스 마운트 (hot reload)
      - .:/app
      - ./docker_volumes/bundle:/usr/local/bundle
      - ./git_repos:/app/git_repos
      # 임시 파일은 컨테이너 내부에서만 (호스트 오염 방지)
      - /app/tmp
      - /app/log
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      RAILS_ENV: ${RAILS_ENV:-development}
      DATABASE_URL: postgresql://postgres:password@db:5432/svn_to_gitlab_${RAILS_ENV:-development}
      REDIS_URL: redis://redis:6379/0
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      SVN_BATCH_SIZE: 50
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    stdin_open: true
    tty: true

  sidekiq:
    build: .
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      # 개발 환경: 전체 소스 마운트
      - .:/app
      - ./docker_volumes/bundle:/usr/local/bundle
      - ./git_repos:/app/git_repos
      # 임시 파일은 컨테이너 내부에서만
      - /app/tmp
      - /app/log
    environment:
      RAILS_ENV: ${RAILS_ENV:-development}
      DATABASE_URL: postgresql://postgres:password@db:5432/svn_to_gitlab_${RAILS_ENV:-development}
      REDIS_URL: redis://redis:6379/0
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      SVN_BATCH_SIZE: 50
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy